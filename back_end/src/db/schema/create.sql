DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS groups CASCADE;
DROP TABLE IF EXISTS user_groups CASCADE;
DROP TABLE IF EXISTS bills CASCADE;
DROP TABLE IF EXISTS invoices CASCADE;
DROP TABLE IF EXISTS friends CASCADE;

CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	avatar VARCHAR(255) NOT NULL
);

CREATE TABLE groups (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE user_groups (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  group_id INTEGER REFERENCES groups(id) ON DELETE CASCADE
);

CREATE TABLE invoices (
  id SERIAL PRIMARY KEY NOT NULL,
	description TEXT NOT NULL,
	cost NUMERIC(10, 2) NOT NULL,
	created_at DATE NOT NULL,
  poster_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  group_id INTEGER REFERENCES groups(id) ON DELETE CASCADE
);

CREATE TABLE bills (
  id SERIAL PRIMARY KEY NOT NULL,
  payee_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  invoice_id INTEGER REFERENCES invoices(id) ON DELETE CASCADE,
  paid BOOLEAN DEFAULT FALSE
);

CREATE TABLE friends (
	id SERIAL PRIMARY KEY NOT NULL,
	user_first_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	user_second_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	confirmed BOOLEAN DEFAULT FALSE
);